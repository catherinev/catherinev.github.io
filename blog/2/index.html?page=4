<!DOCTYPE html>
<html>
  <head>
    <title>Catheine V</title>
    <link data-turbolinks-track="true" href="/assets/reset.css" media="all" rel="stylesheet" />
<link data-turbolinks-track="true" href="/assets/style.css" media="all" rel="stylesheet" />
<link data-turbolinks-track="true" href="/assets/application.css" media="all" rel="stylesheet" />
    <link href='http://fonts.googleapis.com/css?family=Gafata' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Roboto:300italic,300,500' rel='stylesheet' type='text/css'>
  </head>

  <body>
    <h1>Catherine Vongsathorn</h1>
    <script src="/assets/jquery.js"></script>
<script src="/assets/jquery_ujs.js"></script>
<script src="/assets/turbolinks.js"></script>
<script src="/assets/highlightNav.js"></script>
<script src="/assets/application.js"></script>
<div class = "nav">
  <button id = "menu-icon">menu</button>
  <div><a href="/">Home</a></div>
  <div><a href="/about/">About</a></div>
  <div><a href="/blog/">Blog</a></div>
  <div><a href="/experience/">Experience</a></div>
  <div><a href="/links/">Links</a></div>
</div>

    
    <div id = "sp">
  <h4>Recent Posts</h4>
  <ul>
    <li><a href="/blog/23/">My First Rails App!</a></li>
    <li><a href="/blog/22/">Group Projects</a></li>
    <li><a href="/blog/21/">Some reflections on Phase 2</a></li>
    <li><a href="/blog/20/">Reflections on Week 2</a></li>
    <li><a href="/blog/18/">More Reflections on Week 1</a></li>
    <li><a href="/blog/17/">Day 5</a></li>
    <li><a href="/blog/16/">Day 1</a></li>
    <li><a href="/blog/15/">Regular Expressions</a></li>
    <li><a href="/blog/14/">Reflections on Feedback</a></li>
    <li><a href="/blog/13/">Sorting</a></li>
    <li><a href="/blog/12/">Chefs in the Kitchen</a></li>
    <li><a href="/blog/11/">SQL versus NoSQL</a></li>
    <li><a href="/blog/10/">Affirmation and Stereotype Threat</a></li>
    <li><a href="/blog/9/">Object-Oriented Programming versus Functional Programming</a></li>
    <li><a href="/blog/8/">Classes in Ruby</a></li>
    <li><a href="/blog/7/">Computer Science Education</a></li>
    <li><a href="/blog/6/">Dealing with Conflict</a></li>
    <li><a href="/blog/5/"><codein>#map</codein> in Ruby</a></li>
    <li><a href="/blog/4/">Pairing and Group Work</a></li>
    <li><a href="/blog/3/">What are the various ways to loop in Ruby and how can you decide which is best to use?</a></li>
    <li><a href="/blog/19/">Why is JavaScript so popular in web development?</a></li>
    <li><a href="/blog/2/">Some of my values</a></li>
    <li><a href="/blog/1/">Serious Eats</a></li>
  </ul>
</div>


  <h2>Saturday, April 12, 2014</h2>
  <div class = "minipost">
    <h3><a href="/blog/7/">Computer Science Education</a></h3>
    <p>It is not an exaggeration to say that the state of computer science and technology in K-12 education is somewhat alarming. As more jobs are created and exciting innovations are made in computer science and technology, surprisingly few states are providing an adequate education for their students. Only 17 states and the District of Columbia allow computer science courses to count towards core graduation requirements in either math or science. NPR reports that only 10% of K-12 schools teach computer science. And yet, ACM chair of Education Policy Committee Bobby Schnabel reports that by 2020, half of the jobs in STEM (science, technology, engineering, and mathematics) disciplines will be in computing. It is predicted that within the next 10 years there will be approximately 1 million more jobs in the technology sector than there are computer science graduates. How is that possible? What is being done to address this gap?</p>

    <p>There are programs throughout the country that aim to address this problem, but the change needs to come at a state and national level. Current state standards are unacceptably lax. While some states do have standards related explicitly to computer science, most have either too few or none at all. And no state requires a computer science course as a condition of graduation.  &nbsp;&nbsp;<a class="rm" href="/blog/7/">read more&nbsp;&raquo;</a></p>
  </div>
  <h2>Sunday, April 6, 2014</h2>
  <div class = "minipost">
    <h3><a href="/blog/6/">Dealing with Conflict</a></h3>
    <p>I have been a tutor for many years. A few years ago, there was an emotional conflict between me and a parent of one of my students. We will call the student Russell and the parent Jason.</p>
    <p>I had a regular weekly tutoring appointment with Russell. However, one week he had a scheduling conflict so we rescheduled. That week, I arrived at the family's home at the time Jason and I had discussed. Upon arrival, it quickly became clear that Jason had forgotten about our appointment and that Russell was not home. I waited in the hallway for 15-20 minutes while Jason tried to get in touch with Russell. Eventually, Jason determined that Russell was still at school taking a history test, so he would not be able to meet for tutoring. Jason then asked if he would be charged for the tutoring session, and I told them they would be. Jason became extremely upset. I reminded him that that the office I work for has a 24-hour cancelation policy and that he was welcome to discuss any questions he had about the policy with the directors at the office. Jason was still upset and said something to the effect of "If I have to pay for your time, then I'm going to use that time. Teach me the lesson you had planned for Russell." So I did. About 45 minutes later, Russell got home and I spent the remaining part of our session teaching Russell.  &nbsp;&nbsp;<a class="rm" href="/blog/6/">read more&nbsp;&raquo;</a></p>
  </div>
  <h2>Wednesday, April 2, 2014</h2>
  <div class = "minipost">
    <h3><a href="/blog/5/"><codein>#map</codein> in Ruby</a></h3>
    <p>The <codein>#map</codein> method in Ruby can used to transform arrays, hashes, and ranges by calling a block of code on each element and pushing each result to a new array. So, regardless of the class of the input (array, hash, or range), the output is a new array.
    </p>

    <code>
        input.map { |item| block }
        <em>=> output_array</em>
    </code>
    <p>You can interpret this syntax as follows.  &nbsp;&nbsp;<a class="rm" href="/blog/5/">read more&nbsp;&raquo;</a></p>
  </div>
  <h2>Friday, March 28, 2014</h2>
  <div class = "minipost">
    <h3><a href="/blog/4/">Pairing and Group Work</a></h3>
    <p>Sophomore year of college, I took a math class called "Analysis". I had already taken a course called "Intro to Analysis", but even so Analysis basically killed me. The problem sets were designed to be particularly challenging, so most of the class would gather in the math building several times a week to try to solve the problems together. It was pretty intense. One night we all brought sleeping bags (and donuts) and spent the night. Our professor found us all happily snuggled up on the classroom floor the following morning. It was actually pretty awesome. Don't lie; I know you are secretly jealous.
    </p>
    <p>Ever since that class, I have loved solving problems in a group. It is truly remarkable how far beyond my comfort zone I can be pushed when put under pressure with other people who are equally motivated to solve problems. I have found that discussing problems with people who approach them in completely different ways than I do is one of the most productive ways to make progress. Moreover, the moments of success are magnified because I get to share them with other people. Basically, everything about it rocks.  &nbsp;&nbsp;<a class="rm" href="/blog/4/">read more&nbsp;&raquo;</a></p>
  </div>
  <h2>Thursday, March 27, 2014</h2>
  <div class = "minipost">
    <h3><a href="/blog/3/">What are the various ways to loop in Ruby and how can you decide which is best to use?</a></h3>
    <p>There are many ways to loop in Ruby. Below are some of the more common options.</p>
    <ol>
        <li>
            <codein>#each</codein> 
            <code>
                <grn>[collection]</grn>.each do |element|
                <br/>&emsp;&emsp;
                <grn>[some code]</grn>
                <br/>end</code>
            <p>The
                <codein>
                    <grn>[collection]</grn>
                </codein> is often an array but can also be a range, e.g. (1..100), or a hash.  &nbsp;&nbsp;<a class="rm" href="/blog/3/">read more&nbsp;&raquo;</a></p>
  </div>

<div class="pagination"><a class="previous_page" rel="prev" href="/blog/2/?page=3">&#8592; Previous</a> <a class="next_page" rel="next" href="/blog/2/?page=5">Next &#8594;</a></div>


    <footer>
  <div id = "left">Contact me: <a href="mailto:cvong47@gmail.com">Email</a></div>
  <div id = "right">&copy;2014 Catherine Vongsathorn</div>
</footer>


  </body>
</html>
